@model Project_1.Models.Proposal

@{
    ViewBag.Title = "Create";
}

<h2>Create Proposal</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

   <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div id="GeneralInfo" class ="row">
            
            <div class="col-md-4">
                <h3>General Information</h3>
                <div class="form-group">
                    @Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
                    </div> 
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ClientID,"ClientID", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownList("ClientID", null, htmlAttributes: new { @class = "form-control"})
                        @Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.RequestByID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.RequestByID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RequestByID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DateRequested, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div  class="col-md-8">
                        @Html.EditorFor(model => model.DateRequested, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DateRequested, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CreatedByID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CreatedByID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CreatedByID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ApproverID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ApproverID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ApproverID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ApprovedDate, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ApprovedDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ApprovedDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CurrentStatus, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EnumDropDownListFor(model => model.CurrentStatus, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CurrentStatus, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <h3>Calculations</h3>
               

            </div>
            <div class="col-md-4 ">
                <h3>Reference</h3>
                
            </div>
            </div>
            
        <br />
        <div id="PctConstructionCost" class=" row">
            <div class="col-md-4">
            <h3>% Construction Cost and Square Footage</h3>
            <div class="form-group">
                @Html.LabelFor(model => model.SqFtCost, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.SqFtCost, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SqFtCost, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SqFootage, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.SqFootage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SqFootage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EngineeringFeePercent, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.EngineeringFeePercent, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EngineeringFeePercent, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EngineeringFeePerSqFt, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.EngineeringFeePerSqFt, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EngineeringFeePerSqFt, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FeeSqFt, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.FeeSqFt, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FeeSqFt, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FeePercentConstruction, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.FeePercentConstruction, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FeePercentConstruction, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConstructionCost, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ConstructionCost, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConstructionCost, "", new { @class = "text-danger" })
                </div>
            </div>
                
            </div>
            <div class="col-md-4">
               <h3>Calculations</h3>
                <h4>% of Construction Cost</h4>
                <p>
                    *Costs that need to be calculated:<br />
                    Construction cost: cost per sq ft * sq footage<br />
                    FEE based on % of construction Cost: construction cost * % engineering fee<br />
                    FEE based on sq foot: sq footage * engineering fee pre sq ft
                </p>
                <h4>Square Footage Basis</h4>
                <p>
                    FEE based on Square Footage Cost: sq footage * engineering fee per sqft

                </p>
            </div>
            <div class="col-md-4">
                <h3>Reference</h3>
                <div id="pctConstruction">
                    <h4>Commercial Projects</h4>
                    <p>12.5% to 15% of Architect's Fee:</p>
                    <p>
                        A. Architectural Fees will be 5% of Construction cost (Structural
                        fees will be .63 to .75%, including shop drawings).<br />
                        B. Architectural fee will be 8% - 10% for Hospitals, Hi-Tech
                        Facilities, Banks (structural fees will be 1.0 to 1.5%)<br />
                        C. For parking garages, structural fee is 0.75 - 1.25% for
                        pre-cast, 1.00 - 1.5% for post-tension construction
                    </p>
                    <h4>Government Projects</h4>
                    <p>12.5% to 15% of Architect's Fee:</p>
                    <p>
                        A. Architectural Fees will be 6% of Construction cost (Structural fees will be .75 to .9%, including shop drawings).<br />
                        B. On Federal Jobs Architectural fee will be 2% for preliminary studies and design, 6% for construction documents
                    </p>
                    <p>
                        Always check for square footage cost to see if budget is appropriate (Sometimes Architects will give shell cost only). For jobs under $500,000, use 1% of construction cost.
                    </p>
                </div>
                <div id="sqftFee">
                    <h4>Square Footage Basis</h4>
                    <p>
                        Hospitals &emsp;<br /> $1.00/sf (construction Cost = $125/sf)<br />
                        Warehouses &emsp;<br /> $0.10 to $0.18/sf, depending on size and repetition [$4,000 min.]		<br />			
                        Retail:&emsp;<br />$0.12 to $0.20/sf, depending on size and repetition<br />
                        Office Building: &emsp;<br />$0.25 to $0.35/sf<br />
                        Mat Foundation:&emsp;<br />$0.40 to $0.50/sf<br />
                        One Story Tract Housing:&emsp;<br />$0.30 to $0.40 /sf (includes conventional foundations, Redlines only)<br />
                        Two Stroy Tract Housing:&emsp;<br />$0.35 to $0.50 /sf (includes conventional foundations, Redlines only)<br />
                        Custom Homes:&emsp;<br />$0.50 for Redlines and $1.00  to $1.25/sf (includes conventional foundations, Drafting Included)<br />
                        Metal Buildings:&emsp;<br />$.07 to $0.10/sf (Foundations Only) depending on size, repetition ($800 minimum)<br />
                        Hotels:&emsp;<br />$115 per room, depending on number of rooms<br />
                        Above Garage Parking Structures:&emsp;<br />$0.12/sf to (pre-cast) to $0.15/sf (post-tension)<br />
                        Below Garage Parking Structures:&emsp;<br />$0.20/sf to (pre-cast) to $0.25/sf (post-tension)<br />

                    </p>

                </div>
            </div>
        </div>
        <br />
        <div id="NumSheetsAndManHours" class="row">
            <div class="col-md-4">
            <h3>Number of Sheets and Man Hours</h3>
            <div class="form-group">
                @Html.LabelFor(model => model.GSN, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.GSN, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GSN, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TypicalDetails, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.TypicalDetails, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TypicalDetails, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FoundationPlans, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.FoundationPlans, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FoundationPlans, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FloorFraming, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.FloorFraming, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FloorFraming, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RoofFraming, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.RoofFraming, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RoofFraming, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.WallPanelElevation, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.WallPanelElevation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.WallPanelElevation, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SheerWallPlans, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.SheerWallPlans, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SheerWallPlans, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FoundationDetails, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.FoundationDetails, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FoundationDetails, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FramingDetails, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.FramingDetails, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FramingDetails, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EstHoursPerSheet, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.EstHoursPerSheet, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EstHoursPerSheet, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DraftingHourlyRate, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.DraftingHourlyRate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DraftingHourlyRate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EngineeringHourlyRate, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.EngineeringHourlyRate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EngineeringHourlyRate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PlanCheckComments, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.PlanCheckComments, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PlanCheckComments, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ShopDrawingReview, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ShopDrawingReview, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShopDrawingReview, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConstructionAdmin_RFI, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ConstructionAdmin_RFI, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConstructionAdmin_RFI, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SpecialInspections, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.SpecialInspections, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SpecialInspections, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SpecialInspectionsRate, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.SpecialInspectionsRate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SpecialInspectionsRate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FeeSheets, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.FeeSheets, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FeeSheets, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.GSNHours, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.GSNHours, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GSNHours, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TypicalDetailsHours, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.TypicalDetailsHours, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TypicalDetailsHours, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FoundationPlansHours, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.FoundationPlansHours, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FoundationPlansHours, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FloorFramingHours, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.FloorFramingHours, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FloorFramingHours, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RoofFramingHours, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.RoofFramingHours, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RoofFramingHours, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.WallPanelElevationHours, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.WallPanelElevationHours, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.WallPanelElevationHours, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SheerWallPlansHours, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.SheerWallPlansHours, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SheerWallPlansHours, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FoundationDetailsHours, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.FoundationDetailsHours, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FoundationDetailsHours, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FramingDetailsHours, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.FramingDetailsHours, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FramingDetailsHours, "", new { @class = "text-danger" })
                </div>
            </div>
                </div>
            <div class="col-md-4">
                <h3>Calculations</h3>
                <h4>Number of Sheets</h4>
                <p>
                    Total Sheets: SUM of sheets<br />
                    Total Drafting Hours: total sheets * estimated drafting hours per sheet<br />
                    Total Engineering Hours: 2/3 * Total Drafting hours + plan check comments + shop drawing review + constrution administration RFI<br />
                    Estimated Drafting Fee: total drafting hours * hourly rate<br />
                    Estimated Engineering Fee: total engineering hours * hourly rate <br />
                    FEE by numver of sheets: estimated drafting fee + estimated engineering fee

                </p>
            </div>
            <div class="col-md-4">
                <h3>Reference</h3>
                <h4>Number of Sheets</h4>
                
                <p>
                    Figure number of sheets and multiply by 12 ~ 20 hours each for drafting and engineering (if P.E. is doing job, estimate 2/3 to 3/4 of drafting time)<br /><br />
                    Use hourly rates depending on client, type of project, work load, etc.<br /><br />
                    Adjust profit margin if necessary <br /><br />
                </p>
                <h4>Number of Man Hours</h4>
                <p>
                    Recommended Hours/Sheet<br />
                    GSN: &emsp; 1~2<br />
                    Typical Details: &emsp; 1~2<br />
                    Foundation Plans: &emsp; 6~20 <br />
                    Floor Framing Plans: &emsp; 8~20<br />
                    Roof Framing Plans: &emsp; 8~20<br />
                    Wall Panel Elevation: &emsp;8~20<br />
                    Shear Wall Plans:&emsp;8~20<br />
                    Foundation Details:&emsp;6~10<br />
                    Framing Details:&emsp; 6~10<br /><br />

                    Adjust profit margin if necessary (not recommended on small jobs)<br />
                    Man hour basis will give the closest estimate of actual work involved<br />
                    Increase number of hours by 25% to 100% for jobs including renovation to existing construction<br />

                </p>
            </div>
        </div>
        <br />
        <div id="NumberofUnits" class="row">
            <div class="col-md-4">
            <h3>Number of Units</h3>
            <div class="form-group">
                @Html.LabelFor(model => model.NumUnits, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.NumUnits, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NumUnits, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CostPerUnit, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.CostPerUnit, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CostPerUnit, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CommunityServiceArea, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.CommunityServiceArea, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CommunityServiceArea, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PricePerSqFt_CommunityServiceArea, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.PricePerSqFt_CommunityServiceArea, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PricePerSqFt_CommunityServiceArea, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CommunityServiceFees, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.CommunityServiceFees, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CommunityServiceFees, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RetainingWallsAndMiscFee, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.RetainingWallsAndMiscFee, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RetainingWallsAndMiscFee, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NoteOnMiscFees, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.NoteOnMiscFees, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NoteOnMiscFees, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FeeNumUnits, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.FeeNumUnits, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FeeNumUnits, "", new { @class = "text-danger" })
                </div>
            </div>
                </div>
            <div class="col-md-4">
                <h3>Calculations</h3>
            </div>
            <div class="col-md-4">
                <h3>Reference</h3>
                <p>
                    $30 to $40 per unit for normal size projects (150 units or more)<br />
                    Add fee for club houses, recreational buildings, gazebos, retaining walls, mailboxes, etc.<br />
                </p>
            </div>
        </div>
        <br />
        <div id="TotalCalc" class="row">
            <div class="col-md-4">
            <h3>Total Calculation</h3>
            <div class="form-group">
                @Html.LabelFor(model => model.FeeAverage, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.FeeAverage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FeeAverage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NumOfFeesInCalc, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.NumOfFeesInCalc, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NumOfFeesInCalc, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EngineeringEst, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.EngineeringEst, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EngineeringEst, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DraftingEst, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.DraftingEst, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DraftingEst, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ContractAmount, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ContractAmount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContractAmount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EngineeringFee, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.EngineeringFee, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EngineeringFee, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DraftingFee, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.DraftingFee, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DraftingFee, "", new { @class = "text-danger" })
                </div>
            </div>
                </div>
            <div class="col-md-4">
                <h3>Calculations</h3>
            </div>
            <div class="col-md-4">
                <h3>Reference</h3>
                <h4>Minimum Fee:</h4>
                <p>
                    $300 One time Client<br />
                    $150 for regular clients
                </p>
                <h4>Reinbersable:</h4>
                <p>
                    Attempt to Add reinbursible clause to contract for plotting, copying, etc.
                </p>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
