@model Project_1.Models.RequestAndClients
@{  Dictionary<int, string> ClientList = new Dictionary<int, string>();
    foreach (var item in Model.Clients)
    {
        ClientList.Add(item.ClientID, item.ClientName);
    }
    
   
    }

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Request</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(Model => Model.Request.RequestedByID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Request.RequestedByID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Request.RequestedByID, "", new { @class = "text-danger" })
            </div>
        </div>

        @{ 
            Html.DropDownListFor(m => m.Clients, new SelectList(ClientList, "Key", "Value"), "Select Client", new { @class = "form-control" });
        }
        



        <div class="form-group">
            @Html.LabelFor(model => model.Request.ProjectName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Request.ProjectName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Request.ProjectName, "", new { @class = "text-danger" })
            </div>
        </div>
        
       

        <div class="form-group">.
            @Html.LabelFor(model => model.Request.ClientID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Request.ClientID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Request.ClientID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Request.RequestDesc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Request.RequestDesc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Request.RequestDesc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
